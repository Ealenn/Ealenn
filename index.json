[{"categories":null,"contents":" Docker-Compose: Redis Cluster version: \u0026#39;3\u0026#39; x-environment-redis: \u0026amp;default-redis-env ALLOW_EMPTY_PASSWORD: \u0026#39;yes\u0026#39; REDIS_NODES: \u0026#39;127.0.0.1:10000 127.0.0.1:10001 127.0.0.1:10002 127.0.0.1:10003 127.0.0.1:10004 127.0.0.1:10005\u0026#39; services: redis-node-1: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10001 redis-node-2: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10002 redis-node-3: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10003 redis-node-4: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10004 redis-node-5: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10005 redis-cluster: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host depends_on: - redis-node-1 - redis-node-2 - redis-node-3 - redis-node-4 - redis-node-5 environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10000 REDIS_CLUSTER_REPLICAS: 1 REDIS_CLUSTER_CREATOR: \u0026#39;yes\u0026#39; ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://ealen.fr/notes/docker/redis-cluster/","summary":"Docker-Compose: Redis Cluster version: \u0026#39;3\u0026#39; x-environment-redis: \u0026amp;default-redis-env ALLOW_EMPTY_PASSWORD: \u0026#39;yes\u0026#39; REDIS_NODES: \u0026#39;127.0.0.1:10000 127.0.0.1:10001 127.0.0.1:10002 127.0.0.1:10003 127.0.0.1:10004 127.0.0.1:10005\u0026#39; services: redis-node-1: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10001 redis-node-2: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10002 redis-node-3: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10003 redis-node-4: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10004 redis-node-5: image: public.ecr.aws/bitnami/redis-cluster:7.2 restart: always network_mode: host environment: \u0026lt;\u0026lt;: *default-redis-env REDIS_PORT_NUMBER: 10005 redis-cluster: image: public.","tags":null,"title":"Docker-Compose: Redis Cluster"},{"categories":null,"contents":" NAS Update Containers Script docker/ ├─ update.sh ├─ project1/ │ ├─ docker-compose.yml ├─ project2/ │ ├─ docker-compose.yml │ ├─ .DISABLED #!/bin/bash root_path=\u0026#34;/volume1/docker\u0026#34; ########################################### # UPDATE ALL PROJECTS ########################################### # Use a for loop to iterate through folders in the directory for folder in $root_path/*; do cd $root_path # Check if the item is a directory if [ -d \u0026#34;$folder\u0026#34; ]; then if [ -e \u0026#34;$folder/docker-compose.yml\u0026#34; ]; then echo \u0026#34;Docker project found in $folder\u0026#34; if [ -e \u0026#34;$folder/.DISABLED\u0026#34; ]; then echo \u0026#34;Project $folder was disabled. Skip.\u0026#34; else echo \u0026#34;Project $folder enabled.\u0026#34; cd $folder docker-compose pull docker-compose up -d fi else echo \u0026#34;Docker project not found in $folder\u0026#34; fi fi done ########################################### # CLEAN DOCKER IMAGES ########################################### docker system prune --volumes -f docker image prune -a -f ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"https://ealen.fr/notes/nas/update-containers-script/","summary":"NAS Update Containers Script docker/ ├─ update.sh ├─ project1/ │ ├─ docker-compose.yml ├─ project2/ │ ├─ docker-compose.yml │ ├─ .DISABLED #!/bin/bash root_path=\u0026#34;/volume1/docker\u0026#34; ########################################### # UPDATE ALL PROJECTS ########################################### # Use a for loop to iterate through folders in the directory for folder in $root_path/*; do cd $root_path # Check if the item is a directory if [ -d \u0026#34;$folder\u0026#34; ]; then if [ -e \u0026#34;$folder/docker-compose.yml\u0026#34; ]; then echo \u0026#34;Docker project found in $folder\u0026#34; if [ -e \u0026#34;$folder/.","tags":null,"title":"NAS Update Containers Script"},{"categories":null,"contents":"In today\u0026rsquo;s digital age, the need for secure storage solutions has never been greater.\nMany of us have turned to giants like Google Drive or Microsoft OneDrive for their convenience and accessibility. However, have you ever wondered if there\u0026rsquo;s a better way to manage your personal data without compromising your privacy and flexibility?\nIn this article, we\u0026rsquo;ll explore why Nextcloud stands as the ideal alternative to replace any drive provider.\nWhy Using Drive Solutions Like Google Drive or Microsoft? Services like Google Drive and Microsoft OneDrive offer unparalleled ease of use when it comes to synchronizing files across multiple devices. This feature ensures that your documents, photos, and other files are always up-to-date and accessible, which is especially valuable for users who need real-time access to their data.\nBut\u0026hellip; Storing your data with big corporations means potentially compromising your privacy, as they may access and use your personal information. This issue has become increasingly significant, especially in the wake of privacy regulations like the General Data Protection Regulation (GDPR).\nIn recent years, Google has faced legal actions related to its data usage policies. For instance, France\u0026rsquo;s data protection authority, CNIL, issued a significant fine against Google for breaching GDPR regulations, including inadequate information provided to users and lack of valid consent for personalized ads. This condemnation underscores the serious concerns about how Google handles user data.\nPros:\nConvenience: Services like Google Drive and Microsoft OneDrive offer seamless synchronization across devices, making it easy to access your files from anywhere. Collaboration: They provide collaboration features, such as real-time document editing and sharing, which are essential for teamwork. Integration: Integration with other software and services, such as Google Workspace and Microsoft Office, can enhance productivity. Cons:\nPrivacy Concerns: Storing your data with big corporations means potentially compromising your privacy, as they may access and use your personal information. Limited Customization: These services often lack advanced customization options for users who want more control over their data. Dependency: Relying on a single provider makes you vulnerable to service outages and changes in terms of service or pricing. Using Your Own Drive Creating your own cloud storage solution may sound like a daunting task, but it\u0026rsquo;s an incredibly exciting endeavor that offers a plethora of benefits.\nFirst and foremost, it puts you in the driver\u0026rsquo;s seat, giving you full control over your data and privacy. The excitement lies in the freedom to customize your cloud to fit your exact needs, whether it\u0026rsquo;s expanding storage capacity, implementing advanced security measures, or integrating unique features. What makes this journey even more thrilling is the vibrant open-source community that surrounds self-hosted solutions like Nextcloud.\nWith a global network of enthusiasts developers, these communities are constantly pushing the boundaries of what\u0026rsquo;s possible. They enhance and refine features, improve security, and offer invaluable support. So, if you\u0026rsquo;re a web tinkerer or someone who enjoys the thrill of building and contributing, I invite you to dive into the world of self-hosted solutions and join these open-source projects. Regardless of your skill level, there\u0026rsquo;s a place for everyone, and your participation can make a real difference in shaping the future of decentralized, secure, and customizable project.\nAdvantages:\nPrivacy Control: Hosting your data on your own infrastructure ensures you have complete control over your data and who can access it. Cost Savings: Over time, hosting your own cloud storage solution can be cost-effective compared to subscription-based services. Customization: You can tailor your storage solution to meet your specific needs, including security measures and storage capacity. Drawbacks:\nTechnical Knowledge: Setting up and maintaining your own cloud storage solution can be daunting for those without technical expertise. Initial Investment: There may be an upfront cost for hardware and software, such as a Network Attached Storage (NAS) device and server hosting. Responsibility: You\u0026rsquo;re responsible for data backups, security, and system updates, which can be time-consuming. NextCloud NextCloud is a self-hosted, open-source cloud storage and collaboration platform that combines the best of both worlds. It offers the convenience of cloud-based file synchronization and collaboration tools while allowing you to maintain control over your data.\nKey Features of Nextcloud:\nFile Storage: Store, organize, and access your files from any device with ease. Collaboration: Share files, calendars, contacts, and even host video calls within your Nextcloud instance. Security: Nextcloud puts a strong emphasis on security, offering features like end-to-end encryption. Customization: You can extend Nextcloud\u0026rsquo;s functionality through a vast selection of apps and plugins. Self-Hosted: You have complete ownership and control over your data, ensuring your privacy. How to Install Nextcloud with Docker Setting up Nextcloud with Docker offers a flexible and customizable solution. Docker allows you to encapsulate Nextcloud and its dependencies into containers, making installation and management straightforward.\nPrerequisites Ensure you have a server or NAS device capable of running Docker. Install Docker on your server or NAS. Follow the official Docker documentation for your platform.\nDocker Utilizing LinuxServer\u0026rsquo;s Docker image is a prudent choice when considering self-hosting solutions like Nextcloud, as it introduces crucial security features that bolster your data protection efforts. One such feature is the implementation of PUID (Process User ID) and PGID (Process Group ID), which allow you to precisely control who has read and write permissions on your system. This fine-grained control ensures that only authorized users or processes can access and modify specific files or directories, reducing the risk of unauthorized access or data breaches. Furthermore, creating a dedicated Linux group with minimal permissions further fortifies your system\u0026rsquo;s security posture, limiting potential vulnerabilities.\nMoreover, LinuxServer\u0026rsquo;s Docker image goes the extra mile by providing MODS (Modular Object Detection System), an additional layer that equips your self-hosted environment with an array of tools and expanded capabilities. These tools can enhance your cloud storage solution\u0026rsquo;s functionality, security, and monitoring capabilities.\nFollowed folder structure provide a clear and organized setup :\nInside the \u0026ldquo;nextcloud\u0026rdquo; directory, you\u0026rsquo;ve segmented your components into distinct subdirectories, enhancing manageability.\nThe \u0026ldquo;maria_db\u0026rdquo; directory houses the MariaDB database that Nextcloud relies on to store user data and configurations securely. Separating this component ensures data isolation and efficient database management. The \u0026ldquo;nextcloud_config\u0026rdquo; directory is where you store your Nextcloud configuration files, making it easy to access and modify Nextcloud settings as needed. Altogether, this organized folder structure and setup demonstrate a thoughtful approach to creating and maintaining a robust and secure self-hosted Nextcloud instance on your NAS.\nnas/ ├─ nextcloud/ │ ├─ maria_db/ │ ├─ nextcloud_config/ │ ├─ docker-compose.yml │ ├─ .env The \u0026ldquo;docker-compose.yml\u0026rdquo; file is a pivotal piece of the puzzle, as it orchestrates the entire Nextcloud environment using Docker containers. This file defines how your Nextcloud, MariaDB, and any other required services interact, simplifying deployment and maintenance.\nversion: \u0026#39;3.8\u0026#39; services: nextcloud_db: image: lscr.io/linuxserver/mariadb:latest container_name: nextcloud_db restart: unless-stopped volumes: - ./maria_db:/config environment: - PUID=1000 - PGID=100 - TZ=Etc/UTC - MYSQL_ROOT_PASSWORD=$NEXTCLOUD_MYSQL_ROOT_PASSWORD - MYSQL_DATABASE=$NEXTCLOUD_MYSQL_DATABASE - MYSQL_USER=$NEXTCLOUD_MYSQL_USER - MYSQL_PASSWORD=$NEXTCLOUD_MYSQL_PASSWORD nextcloud_app: image: lscr.io/linuxserver/nextcloud:latest restart: unless-stopped ports: - 8443:443 # Replace 8443 by your custom exposed port depends_on: nextcloud_db: condition: service_started volumes: - ./nextcloud_config:/config - /volume1/cloud:/data # Replace /volume1/cloud to your local cloud path environment: - PUID=1000 - PGID=100 - TZ=Etc/UTC - DOCKER_MODS=linuxserver/mods:nextcloud-memories|linuxserver/mods:nextcloud-mediadc - MYSQL_HOST=nextcloud_db - MYSQL_DATABASE=$NEXTCLOUD_MYSQL_DATABASE - MYSQL_USER=$NEXTCLOUD_MYSQL_USER - MYSQL_PASSWORD=$NEXTCLOUD_MYSQL_PASSWORD The \u0026ldquo;.env\u0026rdquo; file contains environment variables necessary for configuring your Nextcloud and MariaDB containers, streamlining the setup process.\nNEXTCLOUD_MYSQL_DATABASE=nextcloud NEXTCLOUD_MYSQL_USER=nextcloud NEXTCLOUD_MYSQL_ROOT_PASSWORD=**************************** NEXTCLOUD_MYSQL_PASSWORD=**************************** Run docker-compose up -d Secure Your Instance By effectively using chmod, chown, and configuring PUID and PGID in your Docker Compose file, you can maintain a secure and customized environment for your self-hosted services while ensuring that permissions align with your system\u0026rsquo;s requirements.\nI recommend establishing a docker group on your server and assigning a unique user for each hosted application within this docker group. Employ the chown command recursively to grant permissions exclusively to each respective user. In the event of a security breach, this approach confines each application within its designated space, mitigating potential issues.\nAdditionally, you have the option to configure permissions in a more granular manner, such as providing full permissions to the user, read-only access to the group, and no access to others, thereby enhancing security measures.\nImplement security best practices, such as enabling HTTPS with Let\u0026rsquo;s Encrypt and configuring user permissions.\nMost NAS solutions offer a valuable feature known as a reverse proxy with Let\u0026rsquo;s Encrypt SSL/TLS certificates. This functionality is typically included within the NAS configuration portal, simplifying the process of securing web applications and services hosted on the NAS.\nIn case you haven\u0026rsquo;t set up a reverse proxy on your server, another excellent option is to consider using Nginx Proxy Manager, a notable open-source solution that offers an appealing alternative. This project is well-regarded for its user-friendly approach, providing straightforward and comprehensible documentation. Furthermore, Nginx Proxy Manager can be effortlessly installed using Docker, making it a convenient choice for those seeking a hassle-free way to implement a reverse proxy for their services.\nConclusion Nextcloud offers an excellent alternative to commercial cloud storage providers like Google Drive or Microsoft OneDrive. By self-hosting NextCloud with Docker, you gain full control over your data\u0026rsquo;s privacy and flexibility while enjoying the benefits of a modern cloud collaboration platform. Take the leap into the world of Nextcloud, and you\u0026rsquo;ll never look back at traditional cloud providers the same way again.\n","date":"September 30, 2023","hero":"/posts/raspberry/nextcloud/hero.png","permalink":"https://ealen.fr/posts/raspberry/nextcloud/","summary":"In today\u0026rsquo;s digital age, the need for secure storage solutions has never been greater.\nMany of us have turned to giants like Google Drive or Microsoft OneDrive for their convenience and accessibility. However, have you ever wondered if there\u0026rsquo;s a better way to manage your personal data without compromising your privacy and flexibility?\nIn this article, we\u0026rsquo;ll explore why Nextcloud stands as the ideal alternative to replace any drive provider.","tags":null,"title":"Nextcloud: The Ultimate Solution to Replace Google Drive and Others"},{"categories":null,"contents":"DNS sinkhole technology provides an effective shield against unwanted online content without the hassle of installing client-side software. In this article, we\u0026rsquo;ll explore how DNS sinkholes work, their advantages, and two leading solutions: Pi-Hole and AdGuard.\nIntroduction Filtering Filtering DNS queries plays a role in bolstering online security and safeguarding our digital privacy.\nBy intercepting and scrutinizing DNS requests, we can proactively block potential threats and security menaces before they even reach our devices. This not only shields us from malicious websites and phishing attempts but also adds an extra layer of defense against cyberattacks like malware distribution and ransomware.\nFurthermore, DNS filtering empowers individuals to take control of their online privacy by thwarting the data-hungry scripts employed by big companies to harvest and monetize our personal information. By blocking these privacy sniffers, we can reduce the risk of our data being exploited for targeted advertising or other intrusive purposes.\nLast but not least, DNS filtering is a potent tool for eliminating the incessant barrage of ads that clutter our browsing experience. It not only enhances our online efficiency but also minimizes the exposure to potentially deceptive or harmful advertisements.\nIn essence, DNS filtering serves as a versatile guardian of our digital world, fortifying our security, preserving our privacy, and decluttering our online landscape.\nDNS Queries DNS (Domain Name System) queries play a crucial role in converting web addresses (e.g., duckduckgo.com) into IP addresses that your devices can understand (e.g., 40.114.177.156).\nThe DNS sinkhole operates as an intermediary between your DNS server and client devices, such as computers, TVs, tablets, and phones. Depending on your DNS sinkhole\u0026rsquo;s configuration, it can either accept or deny requests based on a DNS Sinkhole List. DNS sinkholes categorize queries into two lists: the allowlist and blocklist.\nDNS-Sinkhole DNS-Sinkhole List DNS Server DNS-Sinkhole Request/Response DNS Request/Response\nDNS-Sinkhole List Here\u0026rsquo;s a sample of DNS-Sinkhole Lists:\namptrack.dailymail.co.uk #DailyMail Tracker analytics.gandi.net #Gandi analytics.yahoo.com #Yahoo arc.msn.com #Microsoft areyouahuman.com #Are You A Human atdmt.com #Facebook #... By default, DNS-Sinkhole employs its own list, but you can easily add more from sources like GitHub. I created my own lists and I share them on GitHub at Ealenn/AdGuard-Home-List, which is suitable for corporate use and combines popular lists.\nTo configure AdGuard Home, use its main menu to add one blocklist and one allowlist:\nBlockList :\nhttps://raw.githubusercontent.com/Ealenn/AdGuard-Home-List/gh-pages/AdGuard-Home-List.Block.txt AllowList :\nhttps://raw.githubusercontent.com/Ealenn/AdGuard-Home-List/gh-pages/AdGuard-Home-List.Allow.txt DNS Server Redundancy Another advantage of DNS sinkholes is the availability of multiple DNS servers.\nIf one DNS server becomes inaccessible, your system can automatically switch to another. This redundancy is crucial in scenarios like DDoS attacks, as seen in the 2016 Dyn cyberattack and the 2018 French internet service provider Free DNS breakdown.\nPersonally I use :\nCloudflare, the fastest DNS resolver on Earth Google Cisco Open DNS # AdGuard 94.140.14.14 94.140.15.15 https://dns.adguard.com/dns-query tls://dns.adguard.com # Cloudflare DNS 1.1.1.1 1.0.0.1 https://dns.cloudflare.com/dns-query tls://1.1.1.1 # Google 8.8.8.8 8.8.4.4 https://dns.google/dns-query tls://dns.google # Cisco OpenDNS 208.67.222.222 208.67.220.220 https://doh.opendns.com/dns-query # Dyn DNS 216.146.35.35 216.146.36.36 Concretely Open Source Leaders Pi-Hole Maintained by developers from the US, Canada, England, Germany, and Australia Boasts a sizable community for easy support Blocklists and allowlists are regularly updated and maintained by the developers AdGuard Most developers are located in Moscow, Russia Cleaner interface compared to Pi-Hole Utilizes fewer system resources (RAM) Supports DNS-Over-HTTPS Web Interface Both Pi-Hole and AdGuard offer similar-looking main dashboards accessed via a web browser. These dashboards provide useful statistics and graphs regarding the effectiveness of the ad blockers.\nPi-Hole AdGuard Installation Note: Ensure your router (or DHCP server) assigns a static IP address to your DNS sinkhole. Pi-Hole For more information, refer to the official Pi-Hole documentation here.\nversion: \u0026#34;3\u0026#34; services: pihole: container_name: pihole image: pihole/pihole ports: - \u0026#34;53:53/tcp\u0026#34; - \u0026#34;53:53/udp\u0026#34; - \u0026#34;67:67/udp\u0026#34; - \u0026#34;8000:80/tcp\u0026#34; - \u0026#34;4443:443/tcp\u0026#34; environment: TZ: \u0026#39;Europe/Paris\u0026#39; WEBPASSWORD: \u0026#39;Password used for Web Administration\u0026#39; ServerIP: \u0026#39;IP of Pi-Hole\u0026#39; volumes: - \u0026#39;./etc-pihole/:/etc/pihole/\u0026#39; - \u0026#39;./etc-dnsmasq.d/:/etc/dnsmasq.d/\u0026#39; dns: - 1.1.1.1 - 8.8.8.8 - 8.8.4.4 cap_add: - NET_ADMIN restart: unless-stopped AdGuard For more information, refer to the official AdGuard Home documentation here.\nversion: \u0026#34;3\u0026#34; services: adguard: container_name: adguardhome image: adguard/adguardhome ports: - \u0026#34;53:53/tcp\u0026#34; - \u0026#34;53:53/udp\u0026#34; - \u0026#34;67:67/udp\u0026#34; - \u0026#34;68:68/tcp\u0026#34; - \u0026#34;68:68/udp\u0026#34; - \u0026#34;8000:80/tcp\u0026#34; - \u0026#34;4443:443/tcp\u0026#34; - \u0026#34;853:853/tcp\u0026#34; - \u0026#34;3000:3000/tcp\u0026#34; volumes: - ./workdir:/opt/adguardhome/work - ./confdir:/opt/adguardhome/conf dns: - 1.1.1.1 - 8.8.8.8 - 8.8.4.4 cap_add: - NET_ADMIN restart: unless-stopped You have two options for implementation:\nuse it as a DHCP server for automatic configuration or manually configure the DNS server on your devices to use your Raspberry Pi\u0026rsquo;s IP address. Personally, I\u0026rsquo;ve configured my devices to use the DNS server.\nFeedback After using Pi-Hole for six months and AdGuard for another six months, both solutions proved nearly identical. However, AdGuard Home offers a more appealing interface and easy DNS-Over-HTTPS setup.\nIt\u0026rsquo;s important to note that DNS sinkholes can\u0026rsquo;t block all ads or junk content, as some domains serve multiple purposes. For now, domains like Facebook, YouTube, or Google can\u0026rsquo;t be entirely blocked without causing functionality issues.\nNevertheless, DNS sinkholes can effectively block a substantial portion of unwanted content. On my network, with AdGuard, approximately 10-20 percent of DNS requests are refused, effectively blocking ads and enhancing privacy.\nAds\nadservice.google.com ads.yahoo.com \u0026hellip; Privacy\nmetrics.***.com app-measurement.com analytics.***.com privatestats.whatsapp.net \u0026hellip; ","date":"January 2, 2021","hero":"/posts/raspberry/dns-sinkhole/hero.jpg","permalink":"https://ealen.fr/posts/raspberry/dns-sinkhole/","summary":"DNS sinkhole technology provides an effective shield against unwanted online content without the hassle of installing client-side software. In this article, we\u0026rsquo;ll explore how DNS sinkholes work, their advantages, and two leading solutions: Pi-Hole and AdGuard.\nIntroduction Filtering Filtering DNS queries plays a role in bolstering online security and safeguarding our digital privacy.\nBy intercepting and scrutinizing DNS requests, we can proactively block potential threats and security menaces before they even reach our devices.","tags":null,"title":"DNS sinkhole, between Privacy and AdBlocker, configuration and feedback"}]